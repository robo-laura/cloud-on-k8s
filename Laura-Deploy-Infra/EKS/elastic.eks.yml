# An advanced example of ClusterConfig object with customised nodegroups:
---
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: elastic-cluster
  region: us-east-1
  version: "1.20"

nodeGroups:
  - name: elasticsearch-nodegroup
    instanceType: t4g.medium
    minSize: 1
    maxSize: 3
    volumeSize: 30
    volumeType: gp2
    # ami: ami-05ecac759c81e0b0c
    # amiFamily: AmazonLinux2
    # forces the use of IMDSv2 tokens
    disableIMDSv1: true
    labels:
      nodegroup-type: worker
    iam:
      withAddonPolicies:
        autoScaler: true

  # - name: ng2-private-a
  #   instanceType: m5.large
  #   desiredCapacity: 2
  #   labels:
  #     nodegroup-type: backend-cluster-addons
  #   targetGroupARNs:
  #     - arn:aws:elasticloadbalancing:eu-west-2:01234567890:targetgroup/target-group-1/abcdef0123456789
  #   privateNetworking: true
  #   preBootstrapCommands:
  #     # allow docker registries to be deployed as cluster service
  #     - "sed '2i \"insecure-registries\": [\"172.20.0.0/16\",\"10.100.0.0/16\"],'  /etc/docker/daemon.json"
  #     - "systemctl restart docker"

  # - name: ng3-private-b
  #   instanceType: c3.8xlarge
  #   desiredCapacity: 4
  #   labels:
  #     nodegroup-type: very-special-science-workloads
  #   classicLoadBalancerNames:
  #     - ng3-classic-load-balancer
  #   asgMetricsCollection:
  #     - granularity: 1Minute
  #       metrics:
  #         - GroupMinSize
  #         - GroupMaxSize
  #         - GroupDesiredCapacity
  #         - GroupInServiceInstances
  #         - GroupPendingInstances
  #         - GroupStandbyInstances
  #         - GroupTerminatingInstances
  #         - GroupTotalInstances
  #   taints:
  #     - key: special
  #       value: "true"
  #       effect: NoSchedule
  #   privateNetworking: true
    # availabilityZones: ["eu-west-2a"] # use single AZ to optimise data transfer between instances
    # preBootstrapCommands:
      # disable hyperthreading
      # - "for n in $(cat /sys/devices/system/cpu/cpu*/topology/thread_siblings_list | cut -s -d, -f2- | tr ',' '\n' | sort -un); do echo 0 > /sys/devices/system/cpu/cpu${n}/online; done"

# cluster AZs must be set explicitly for single AZ nodegroup example to work
availabilityZones: ["us-east-1a","us-east-1c","us-east-1b"]